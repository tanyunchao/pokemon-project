{"ast":null,"code":"var _jsxFileName = \"/Users/yunchao/codes/coding interviews/pokefront/src/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    auth,\n    tokensetter\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const onSubmit = e => {\n    e.preventDefault();\n    //check whether user is auth and return token if authenticated\n    fetch('http://localhost:8000/auth/users/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      console.log(res.json());\n    });\n    console.log(\"onsubmit ran\");\n\n    //login(email, password)\n  };\n\n  //check whether user authenticated\n  //redirect to the homepage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"signuplink\",\n      to: \"/signup\",\n      children: \"No Account? Sign up here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Button","Form","Link","Login","auth","tokensetter","email","setEmail","password","setPassword","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","formData","then","res","console","log","json","target","value"],"sources":["/Users/yunchao/codes/coding interviews/pokefront/src/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\n\n\nconst Login = ({auth, tokensetter}) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const onSubmit = e => {\n        e.preventDefault();\n        //check whether user is auth and return token if authenticated\n        fetch('http://localhost:8000/auth/users/', {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formData)\n        }).then(res => {\n    \n            console.log(res.json())\n\n        })\n\n        console.log(\"onsubmit ran\");\n\n        //login(email, password)\n    }\n\n    //check whether user authenticated\n    //redirect to the homepage\n\n    return ( \n        <div className=\"login\">\n            <div>\n                <form onSubmit={onSubmit}>\n                <label>Email</label>\n                    <input \n                    required\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    ></input>\n                </form>\n            </div>\n\n            <br />\n            <Link className='signuplink' to=\"/signup\">No Account? Sign up here!</Link>\n        </div>\n    );\n}\n \nexport default Login;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAGxC,MAAMC,KAAK,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAACC,IAAI;IAAEC;EAAW,CAAC;EAE9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG5C,MAAMW,QAAQ,GAAGC,CAAC,IAAI;IAClBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAC,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IACjC,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MAEXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,EAAE,CAAC;IAE3B,CAAC,CAAC;IAEFF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;IAE3B;EACJ,CAAC;;EAED;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAA,uBACI;QAAM,QAAQ,EAAEb,QAAS;QAAA,wBACzB;UAAA,UAAO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChB;UACA,QAAQ;UACR,IAAI,EAAC,MAAM;UACX,KAAK,EAAEJ,KAAM;UACb,QAAQ,EAAGK,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACc,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACjC;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA,QACL,eAEN;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,IAAI;MAAC,SAAS,EAAC,YAAY;MAAC,EAAE,EAAC,SAAS;MAAA,UAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACxE;AAEd,CAAC;AAAA,GA7CKvB,KAAK;AAAA,KAALA,KAAK;AA+CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}